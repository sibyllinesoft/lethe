{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://lethe.dev/schemas/bootstrap-validation.json",
  "title": "BCa Bootstrap Validation Results",
  "description": "Schema for validating BCa bootstrap confidence interval results and statistical validation",
  "type": "object",
  "properties": {
    "validation_summary": {
      "type": "object",
      "properties": {
        "overall_validation_passed": {
          "type": "boolean",
          "description": "Whether all validation criteria were met"
        },
        "n_bootstrap_samples": {
          "type": "integer",
          "minimum": 1000,
          "description": "Number of bootstrap samples used (≥10,000 recommended)"
        },
        "confidence_level": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Confidence level for intervals (typically 0.95)"
        },
        "random_seed": {
          "type": "integer",
          "description": "Random seed for reproducibility"
        },
        "timestamp": {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
          "description": "Timestamp when validation was performed"
        }
      },
      "required": ["overall_validation_passed", "n_bootstrap_samples", "confidence_level"],
      "additionalProperties": false
    },
    "individual_validations": {
      "type": "object",
      "properties": {
        "ndcg_improvement": {
          "$ref": "#/definitions/ndcg_validation"
        },
        "answer_span_preservation": {
          "$ref": "#/definitions/preservation_validation"
        },
        "token_reduction": {
          "$ref": "#/definitions/token_reduction_validation"
        },
        "performance": {
          "$ref": "#/definitions/performance_validation"
        }
      },
      "additionalProperties": false
    },
    "statistical_methodology": {
      "type": "object",
      "properties": {
        "bootstrap_method": {
          "type": "string",
          "enum": ["Bias-Corrected and accelerated (BCa)"],
          "description": "Bootstrap method used"
        },
        "reference": {
          "type": "string",
          "description": "Academic reference for methodology"
        },
        "confidence_intervals": {
          "type": "string",
          "description": "Method used for confidence interval computation"
        },
        "hypothesis_testing": {
          "type": "string",
          "description": "Approach to hypothesis testing and multiple comparison correction"
        },
        "effect_sizes": {
          "type": "string",
          "description": "Method for computing effect sizes"
        }
      },
      "required": ["bootstrap_method"],
      "additionalProperties": false
    }
  },
  "required": ["validation_summary", "individual_validations", "statistical_methodology"],
  "additionalProperties": false,
  "definitions": {
    "bootstrap_result": {
      "type": "object",
      "properties": {
        "metric_name": {
          "type": "string",
          "description": "Name of the metric being analyzed"
        },
        "original_value": {
          "type": "number",
          "description": "Original statistic value from sample"
        },
        "bootstrap_mean": {
          "type": "number",
          "description": "Mean of bootstrap distribution"
        },
        "bootstrap_std": {
          "type": "number",
          "minimum": 0,
          "description": "Standard deviation of bootstrap distribution"
        },
        "ci_lower": {
          "type": "number",
          "description": "Lower bound of confidence interval"
        },
        "ci_upper": {
          "type": "number",
          "description": "Upper bound of confidence interval"
        },
        "confidence_level": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Confidence level for interval"
        },
        "n_bootstrap": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of bootstrap samples"
        },
        "bias_correction": {
          "type": "number",
          "description": "Bias correction parameter (z_0)"
        },
        "acceleration": {
          "type": "number",
          "description": "Acceleration parameter (a_hat)"
        },
        "p_value": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "P-value for two-sided hypothesis test"
        },
        "effect_size": {
          "type": "number",
          "description": "Standardized effect size"
        },
        "is_significant": {
          "type": "boolean",
          "description": "Whether result is statistically significant (p < 0.05)"
        },
        "meets_threshold": {
          "type": "boolean",
          "description": "Whether confidence interval meets specified threshold"
        },
        "computation_time_ms": {
          "type": "number",
          "minimum": 0,
          "description": "Time taken for bootstrap computation"
        }
      },
      "required": [
        "metric_name", "original_value", "bootstrap_mean", "bootstrap_std",
        "ci_lower", "ci_upper", "confidence_level", "n_bootstrap",
        "bias_correction", "acceleration", "p_value", "effect_size",
        "is_significant", "meets_threshold", "computation_time_ms"
      ]
    },
    "ndcg_validation": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "enum": ["nDCG@10_improvement"],
          "description": "Metric being validated"
        },
        "target": {
          "type": "string",
          "pattern": ">= \\d+\\.?\\d*% improvement",
          "description": "Target improvement threshold"
        },
        "actual_improvement_pct": {
          "type": "number",
          "description": "Actual percentage improvement achieved"
        },
        "ci_lower_bound": {
          "type": "number",
          "description": "95% confidence interval lower bound"
        },
        "ci_upper_bound": {
          "type": "number",
          "description": "95% confidence interval upper bound"
        },
        "meets_improvement_threshold": {
          "type": "boolean",
          "description": "Whether improvement meets minimum threshold"
        },
        "ci_lower_positive": {
          "type": "boolean",
          "description": "Whether CI lower bound > 0 (statistically significant)"
        },
        "validation_passed": {
          "type": "boolean",
          "description": "Whether both thresholds are met"
        },
        "interpretation": {
          "type": "string",
          "description": "Human-readable interpretation of results"
        }
      },
      "required": [
        "metric", "target", "actual_improvement_pct", "ci_lower_bound", "ci_upper_bound",
        "meets_improvement_threshold", "ci_lower_positive", "validation_passed", "interpretation"
      ]
    },
    "preservation_validation": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "enum": ["Answer_Span_Kept"],
          "description": "Metric being validated"
        },
        "target": {
          "type": "string",
          "pattern": ">= \\d+\\.?\\d*% preservation",
          "description": "Target preservation threshold"
        },
        "actual_mean": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Actual mean preservation ratio"
        },
        "ci_lower_bound": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "95% confidence interval lower bound"
        },
        "ci_upper_bound": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "95% confidence interval upper bound"
        },
        "meets_threshold": {
          "type": "boolean",
          "description": "Whether CI lower bound meets threshold (≥98%)"
        },
        "validation_passed": {
          "type": "boolean",
          "description": "Whether preservation requirement is satisfied"
        },
        "interpretation": {
          "type": "string",
          "description": "Human-readable interpretation of results"
        }
      },
      "required": [
        "metric", "target", "actual_mean", "ci_lower_bound", "ci_upper_bound",
        "meets_threshold", "validation_passed", "interpretation"
      ]
    },
    "token_reduction_validation": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "enum": ["Token_Reduction"],
          "description": "Metric being validated"
        },
        "target": {
          "type": "string",
          "pattern": "\\d+\\.?\\d*%-\\d+\\.?\\d*% reduction",
          "description": "Target reduction range"
        },
        "actual_mean": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Actual mean token reduction ratio"
        },
        "ci_lower_bound": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "95% confidence interval lower bound"
        },
        "ci_upper_bound": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "95% confidence interval upper bound"
        },
        "mean_in_range": {
          "type": "boolean",
          "description": "Whether mean is in target range [30%, 50%]"
        },
        "ci_overlaps_range": {
          "type": "boolean",
          "description": "Whether CI overlaps with target range"
        },
        "validation_passed": {
          "type": "boolean",
          "description": "Whether token reduction requirements are met"
        },
        "interpretation": {
          "type": "string",
          "description": "Human-readable interpretation of results"
        }
      },
      "required": [
        "metric", "target", "actual_mean", "ci_lower_bound", "ci_upper_bound",
        "mean_in_range", "ci_overlaps_range", "validation_passed", "interpretation"
      ]
    },
    "performance_validation": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "enum": ["Performance_Latency"],
          "description": "Metric being validated"
        },
        "p50_target": {
          "type": "number",
          "minimum": 0,
          "description": "50th percentile target in milliseconds"
        },
        "p95_target": {
          "type": "number",
          "minimum": 0,
          "description": "95th percentile target in milliseconds"
        },
        "p50_actual": {
          "type": "number",
          "minimum": 0,
          "description": "Actual 50th percentile latency"
        },
        "p50_ci_upper": {
          "type": "number",
          "minimum": 0,
          "description": "95% CI upper bound for p50"
        },
        "p95_actual": {
          "type": "number",
          "minimum": 0,
          "description": "Actual 95th percentile latency"
        },
        "p95_ci_upper": {
          "type": "number",
          "minimum": 0,
          "description": "95% CI upper bound for p95"
        },
        "p50_meets_target": {
          "type": "boolean",
          "description": "Whether p50 CI upper bound ≤ target"
        },
        "p95_meets_target": {
          "type": "boolean",
          "description": "Whether p95 CI upper bound ≤ target"
        },
        "validation_passed": {
          "type": "boolean",
          "description": "Whether both performance targets are met"
        }
      },
      "required": [
        "metric", "p50_target", "p95_target", "p50_actual", "p50_ci_upper",
        "p95_actual", "p95_ci_upper", "p50_meets_target", "p95_meets_target", "validation_passed"
      ]
    }
  },
  "examples": [
    {
      "validation_summary": {
        "overall_validation_passed": true,
        "n_bootstrap_samples": 10000,
        "confidence_level": 0.95,
        "random_seed": 42,
        "timestamp": "2024-01-15 14:30:22"
      },
      "individual_validations": {
        "ndcg_improvement": {
          "metric": "nDCG@10_improvement",
          "target": ">= 10.0% improvement",
          "actual_improvement_pct": 12.3,
          "ci_lower_bound": 0.023,
          "ci_upper_bound": 0.045,
          "meets_improvement_threshold": true,
          "ci_lower_positive": true,
          "validation_passed": true,
          "interpretation": "✅ PASS: nDCG@10 improvement of 12.30% meets 10% threshold"
        }
      },
      "statistical_methodology": {
        "bootstrap_method": "Bias-Corrected and accelerated (BCa)",
        "reference": "Efron, B. & Tibshirani, R. (1993). An Introduction to the Bootstrap."
      }
    }
  ]
}