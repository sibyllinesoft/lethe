{
  "_comment": "Milestone 4 Baseline Configuration Template",
  "_description": "Configuration for all six baseline implementations with performance parity constraints",
  
  "database": {
    "db_path": ":memory:",
    "_comment": "Use in-memory SQLite for speed, or provide path for persistent storage"
  },
  
  "embedding_models": {
    "primary_model": "all-MiniLM-L6-v2",
    "_alternatives": [
      "all-MiniLM-L12-v2",
      "all-mpnet-base-v2"
    ],
    "_comment": "Sentence transformer model for vector embeddings. MiniLM-L6 is fastest CPU model."
  },
  
  "bm25_parameters": {
    "k1": 1.2,
    "b": 0.75,
    "_comment": "Standard BM25 parameters. k1 controls term frequency scaling, b controls length normalization."
  },
  
  "vector_index": {
    "index_type": "hnsw",
    "ef_construction": 200,
    "ef_search": 50,
    "_comment": "HNSW parameters. Higher ef_construction = better index quality. Higher ef_search = better recall but slower."
  },
  
  "hybrid_fusion": {
    "alpha": 0.5,
    "_comment": "Static fusion weight: α*BM25 + (1-α)*Vector. 0.5 = equal weighting."
  },
  
  "mmr_diversity": {
    "lambda": 0.7,
    "_comment": "MMR parameter: λ*relevance - (1-λ)*diversity. Higher λ = more relevance, less diversity."
  },
  
  "doc2query_expansion": {
    "num_expansions": 3,
    "expansion_model": "doc2query/msmarco-t5-base-v1",
    "_fallback": "pattern_based",
    "_comment": "Number of query expansions to generate per document. Falls back to pattern extraction if T5 unavailable."
  },
  
  "cross_encoder_rerank": {
    "rerank_model": "cross-encoder/ms-marco-MiniLM-L-2-v2", 
    "rerank_k": 100,
    "_alternatives": [
      "cross-encoder/ms-marco-TinyBERT-L-2-v2"
    ],
    "_comment": "Cross-encoder for reranking. TinyBERT is faster but less accurate than MiniLM."
  },
  
  "budget_parity": {
    "tolerance": 0.05,
    "_comment": "±5% deviation allowed from BM25 baseline FLOPs budget"
  },
  
  "anti_fraud": {
    "min_smoke_test_queries": 5,
    "_comment": "Minimum queries for smoke testing each baseline"
  },
  
  "performance_targets": {
    "max_latency_ms": 2000,
    "max_memory_mb": 1000,
    "min_success_rate": 0.8,
    "_comment": "Performance thresholds for baseline acceptance"
  },
  
  "evaluation": {
    "k": 100,
    "candidate_multiplier": 2,
    "_comment": "Retrieve top-k results. Use candidate_multiplier * k for fusion methods."
  }
}