{
  "metadata": {
    "name": "LetheBench",
    "version": "1.0.0",
    "created": "2025-08-23T06:27:20.174250+00:00",
    "examples_source": "examples",
    "total_examples": 3,
    "total_queries": 165,
    "domains": [
      "api",
      "web",
      "cli"
    ],
    "difficulty_levels": [
      "easy",
      "medium",
      "hard"
    ]
  },
  "examples": [
    {
      "id": "1a46459973cf",
      "name": "sample-tool-conversation",
      "path": "examples/sample-tool-conversation.json",
      "domain": "cli",
      "type": "conversation",
      "session_id": "tool_session_001",
      "message_count": 4,
      "chunks": [
        {
          "id": "chunk_0",
          "turn": 1,
          "role": "user",
          "text": "I need to set up automated deployment for my Node.js application using GitHub Actions.",
          "timestamp": 1703184000,
          "code_blocks": [],
          "has_code": false,
          "length": 86
        },
        {
          "id": "chunk_1",
          "turn": 2,
          "role": "assistant",
          "text": "I'll help you set up GitHub Actions for automated Node.js deployment. Here's a comprehensive workflow:\n\nCreate `.github/workflows/deploy.yml`:\n\n```yaml\nname: Deploy to Production\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    \n    strategy:\n      matrix:\n        node-version: [16.x, 18.x]\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Use Node.js ${{ matrix.node-version }}\n      uses: actions/setup-node@v3\n      with:\n        node-version: ${{ matrix.node-version }}\n        cache: 'npm'\n    \n    - run: npm ci\n    - run: npm run build --if-present\n    - run: npm test\n\n  deploy:\n    needs: test\n    runs-on: ubuntu-latest\n    if: github.ref == 'refs/heads/main'\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Setup Node.js\n      uses: actions/setup-node@v3\n      with:\n        node-version: '18'\n        cache: 'npm'\n    \n    - run: npm ci\n    - run: npm run build\n    \n    - name: Deploy to server\n      uses: appleboy/ssh-action@v0.1.5\n      with:\n        host: ${{ secrets.HOST }}\n        username: ${{ secrets.USERNAME }}\n        key: ${{ secrets.KEY }}\n        script: |\n          cd /var/www/your-app\n          git pull origin main\n          npm install --production\n          npm run build\n          pm2 restart your-app\n```",
          "timestamp": 1703184120,
          "code_blocks": [
            {
              "language": "yaml",
              "code": "name: Deploy to Production\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    \n    strategy:\n      matrix:\n        node-version: [16.x, 18.x]\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Use Node.js ${{ matrix.node-version }}\n      uses: actions/setup-node@v3\n      with:\n        node-version: ${{ matrix.node-version }}\n        cache: 'npm'\n    \n    - run: npm ci\n    - run: npm run build --if-present\n    - run: npm test\n\n  deploy:\n    needs: test\n    runs-on: ubuntu-latest\n    if: github.ref == 'refs/heads/main'\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Setup Node.js\n      uses: actions/setup-node@v3\n      with:\n        node-version: '18'\n        cache: 'npm'\n    \n    - run: npm ci\n    - run: npm run build\n    \n    - name: Deploy to server\n      uses: appleboy/ssh-action@v0.1.5\n      with:\n        host: ${{ secrets.HOST }}\n        username: ${{ secrets.USERNAME }}\n        key: ${{ secrets.KEY }}\n        script: |\n          cd /var/www/your-app\n          git pull origin main\n          npm install --production\n          npm run build\n          pm2 restart your-app",
              "length": 1190
            }
          ],
          "has_code": true,
          "length": 1346
        },
        {
          "id": "chunk_2",
          "turn": 3,
          "role": "user",
          "text": "What secrets do I need to configure in GitHub?",
          "timestamp": 1703184180,
          "code_blocks": [],
          "has_code": false,
          "length": 46
        },
        {
          "id": "chunk_3",
          "turn": 4,
          "role": "assistant",
          "text": "You'll need to configure these secrets in your GitHub repository settings (Settings > Secrets and variables > Actions):\n\n**Required Secrets:**\n\n1. **HOST** - Your server's IP address or domain\n   - Example: `192.168.1.100` or `your-domain.com`\n\n2. **USERNAME** - SSH username for your server\n   - Example: `ubuntu`, `deploy`, or your server username\n\n3. **KEY** - Your private SSH key\n   - Generate with: `ssh-keygen -t rsa -b 4096 -C \"your-email@example.com\"`\n   - Copy the **private key** content (usually `~/.ssh/id_rsa`)\n   - Add the **public key** to your server's `~/.ssh/authorized_keys`\n\n**Steps to set up secrets:**\n\n1. Go to your GitHub repo\n2. Click Settings > Secrets and variables > Actions\n3. Click \"New repository secret\" for each:\n   - Name: `HOST`, Value: your server IP/domain\n   - Name: `USERNAME`, Value: your SSH username  \n   - Name: `KEY`, Value: your private SSH key content\n\n**Security Tips:**\n- Create a dedicated deploy user on your server\n- Limit SSH key permissions to deployment directories only\n- Consider using GitHub's environment protection rules for production deployments\n- Use separate secrets for staging vs production environments",
          "timestamp": 1703184240,
          "code_blocks": [],
          "has_code": false,
          "length": 1169
        }
      ],
      "metadata": {
        "source_file": "examples/sample-tool-conversation.json",
        "conversation_length": 4,
        "timestamp_range": {
          "start": 1703184000,
          "end": 1703184240,
          "duration": 240
        }
      }
    },
    {
      "id": "56b6ecaa6f36",
      "name": "sample-api-conversation",
      "path": "examples/sample-api-conversation.json",
      "domain": "api",
      "type": "conversation",
      "session_id": "api_session_001",
      "message_count": 4,
      "chunks": [
        {
          "id": "chunk_0",
          "turn": 1,
          "role": "user",
          "text": "I need to create a REST API for managing user authentication with JWT tokens.",
          "timestamp": 1703270400,
          "code_blocks": [],
          "has_code": false,
          "length": 77
        },
        {
          "id": "chunk_1",
          "turn": 2,
          "role": "assistant",
          "text": "I'll help you create a secure JWT authentication API. Here's a complete implementation using Express.js:\n\n**1. Install dependencies:**\n```bash\nnpm install express bcryptjs jsonwebtoken dotenv\nnpm install -D nodemon\n```\n\n**2. Environment setup (.env):**\n```env\nJWT_SECRET=your-super-secret-jwt-key-here\nJWT_EXPIRE=24h\nPORT=3000\n```\n\n**3. Auth API (auth.js):**\n```javascript\nconst express = require('express');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst router = express.Router();\n\n// Mock user database (replace with real database)\nconst users = [];\n\n// Register endpoint\nrouter.post('/register', async (req, res) => {\n  try {\n    const { email, password } = req.body;\n    \n    // Check if user exists\n    const existingUser = users.find(u => u.email === email);\n    if (existingUser) {\n      return res.status(400).json({ error: 'User already exists' });\n    }\n    \n    // Hash password\n    const salt = await bcrypt.genSalt(10);\n    const hashedPassword = await bcrypt.hash(password, salt);\n    \n    // Create user\n    const user = {\n      id: users.length + 1,\n      email,\n      password: hashedPassword\n    };\n    users.push(user);\n    \n    // Generate JWT\n    const token = jwt.sign(\n      { userId: user.id, email: user.email },\n      process.env.JWT_SECRET,\n      { expiresIn: process.env.JWT_EXPIRE }\n    );\n    \n    res.status(201).json({\n      message: 'User registered successfully',\n      token,\n      user: { id: user.id, email: user.email }\n    });\n    \n  } catch (error) {\n    res.status(500).json({ error: 'Server error' });\n  }\n});\n\n// Login endpoint\nrouter.post('/login', async (req, res) => {\n  try {\n    const { email, password } = req.body;\n    \n    // Find user\n    const user = users.find(u => u.email === email);\n    if (!user) {\n      return res.status(401).json({ error: 'Invalid credentials' });\n    }\n    \n    // Check password\n    const isMatch = await bcrypt.compare(password, user.password);\n    if (!isMatch) {\n      return res.status(401).json({ error: 'Invalid credentials' });\n    }\n    \n    // Generate JWT\n    const token = jwt.sign(\n      { userId: user.id, email: user.email },\n      process.env.JWT_SECRET,\n      { expiresIn: process.env.JWT_EXPIRE }\n    );\n    \n    res.json({\n      message: 'Login successful',\n      token,\n      user: { id: user.id, email: user.email }\n    });\n    \n  } catch (error) {\n    res.status(500).json({ error: 'Server error' });\n  }\n});\n\nmodule.exports = router;\n```",
          "timestamp": 1703270520,
          "code_blocks": [
            {
              "language": "bash",
              "code": "npm install express bcryptjs jsonwebtoken dotenv\nnpm install -D nodemon",
              "length": 71
            },
            {
              "language": "env",
              "code": "JWT_SECRET=your-super-secret-jwt-key-here\nJWT_EXPIRE=24h\nPORT=3000",
              "length": 66
            },
            {
              "language": "javascript",
              "code": "const express = require('express');\nconst bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst router = express.Router();\n\n// Mock user database (replace with real database)\nconst users = [];\n\n// Register endpoint\nrouter.post('/register', async (req, res) => {\n  try {\n    const { email, password } = req.body;\n    \n    // Check if user exists\n    const existingUser = users.find(u => u.email === email);\n    if (existingUser) {\n      return res.status(400).json({ error: 'User already exists' });\n    }\n    \n    // Hash password\n    const salt = await bcrypt.genSalt(10);\n    const hashedPassword = await bcrypt.hash(password, salt);\n    \n    // Create user\n    const user = {\n      id: users.length + 1,\n      email,\n      password: hashedPassword\n    };\n    users.push(user);\n    \n    // Generate JWT\n    const token = jwt.sign(\n      { userId: user.id, email: user.email },\n      process.env.JWT_SECRET,\n      { expiresIn: process.env.JWT_EXPIRE }\n    );\n    \n    res.status(201).json({\n      message: 'User registered successfully',\n      token,\n      user: { id: user.id, email: user.email }\n    });\n    \n  } catch (error) {\n    res.status(500).json({ error: 'Server error' });\n  }\n});\n\n// Login endpoint\nrouter.post('/login', async (req, res) => {\n  try {\n    const { email, password } = req.body;\n    \n    // Find user\n    const user = users.find(u => u.email === email);\n    if (!user) {\n      return res.status(401).json({ error: 'Invalid credentials' });\n    }\n    \n    // Check password\n    const isMatch = await bcrypt.compare(password, user.password);\n    if (!isMatch) {\n      return res.status(401).json({ error: 'Invalid credentials' });\n    }\n    \n    // Generate JWT\n    const token = jwt.sign(\n      { userId: user.id, email: user.email },\n      process.env.JWT_SECRET,\n      { expiresIn: process.env.JWT_EXPIRE }\n    );\n    \n    res.json({\n      message: 'Login successful',\n      token,\n      user: { id: user.id, email: user.email }\n    });\n    \n  } catch (error) {\n    res.status(500).json({ error: 'Server error' });\n  }\n});\n\nmodule.exports = router;",
              "length": 2095
            }
          ],
          "has_code": true,
          "length": 2472
        },
        {
          "id": "chunk_2",
          "turn": 3,
          "role": "user",
          "text": "How do I create middleware to protect routes that require authentication?",
          "timestamp": 1703270580,
          "code_blocks": [],
          "has_code": false,
          "length": 73
        },
        {
          "id": "chunk_3",
          "turn": 4,
          "role": "assistant",
          "text": "Here's how to create authentication middleware to protect your routes:\n\n**1. Create auth middleware (middleware/auth.js):**\n```javascript\nconst jwt = require('jsonwebtoken');\n\nconst authMiddleware = (req, res, next) => {\n  try {\n    // Get token from header\n    const token = req.header('Authorization')?.replace('Bearer ', '');\n    \n    if (!token) {\n      return res.status(401).json({ error: 'No token provided' });\n    }\n    \n    // Verify token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    \n    // Add user info to request\n    req.user = decoded;\n    next();\n    \n  } catch (error) {\n    if (error.name === 'TokenExpiredError') {\n      return res.status(401).json({ error: 'Token expired' });\n    }\n    if (error.name === 'JsonWebTokenError') {\n      return res.status(401).json({ error: 'Invalid token' });\n    }\n    res.status(500).json({ error: 'Server error' });\n  }\n};\n\nmodule.exports = authMiddleware;\n```\n\n**2. Use middleware in your main app (app.js):**\n```javascript\nconst express = require('express');\nconst authRoutes = require('./routes/auth');\nconst authMiddleware = require('./middleware/auth');\nrequire('dotenv').config();\n\nconst app = express();\n\n// Middleware\napp.use(express.json());\n\n// Public routes\napp.use('/api/auth', authRoutes);\n\n// Protected routes\napp.get('/api/profile', authMiddleware, (req, res) => {\n  res.json({\n    message: 'Protected profile data',\n    user: req.user\n  });\n});\n\napp.get('/api/dashboard', authMiddleware, (req, res) => {\n  res.json({\n    message: `Welcome to dashboard, ${req.user.email}!`,\n    userId: req.user.userId\n  });\n});\n\n// Start server\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => {\n  console.log(`Server running on port ${PORT}`);\n});\n```\n\n**3. Usage examples:**\n\n**Register:**\n```bash\ncurl -X POST http://localhost:3000/api/auth/register \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"email\":\"user@example.com\",\"password\":\"password123\"}'\n```\n\n**Login:**\n```bash\ncurl -X POST http://localhost:3000/api/auth/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"email\":\"user@example.com\",\"password\":\"password123\"}'\n```\n\n**Access protected route:**\n```bash\ncurl -X GET http://localhost:3000/api/profile \\\n  -H \"Authorization: Bearer YOUR_JWT_TOKEN_HERE\"\n```\n\nThe middleware automatically:\n- Extracts JWT from Authorization header\n- Verifies token signature and expiration\n- Adds decoded user info to `req.user`\n- Returns appropriate error responses for invalid/expired tokens",
          "timestamp": 1703270640,
          "code_blocks": [
            {
              "language": "javascript",
              "code": "const jwt = require('jsonwebtoken');\n\nconst authMiddleware = (req, res, next) => {\n  try {\n    // Get token from header\n    const token = req.header('Authorization')?.replace('Bearer ', '');\n    \n    if (!token) {\n      return res.status(401).json({ error: 'No token provided' });\n    }\n    \n    // Verify token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    \n    // Add user info to request\n    req.user = decoded;\n    next();\n    \n  } catch (error) {\n    if (error.name === 'TokenExpiredError') {\n      return res.status(401).json({ error: 'Token expired' });\n    }\n    if (error.name === 'JsonWebTokenError') {\n      return res.status(401).json({ error: 'Invalid token' });\n    }\n    res.status(500).json({ error: 'Server error' });\n  }\n};\n\nmodule.exports = authMiddleware;",
              "length": 796
            },
            {
              "language": "javascript",
              "code": "const express = require('express');\nconst authRoutes = require('./routes/auth');\nconst authMiddleware = require('./middleware/auth');\nrequire('dotenv').config();\n\nconst app = express();\n\n// Middleware\napp.use(express.json());\n\n// Public routes\napp.use('/api/auth', authRoutes);\n\n// Protected routes\napp.get('/api/profile', authMiddleware, (req, res) => {\n  res.json({\n    message: 'Protected profile data',\n    user: req.user\n  });\n});\n\napp.get('/api/dashboard', authMiddleware, (req, res) => {\n  res.json({\n    message: `Welcome to dashboard, ${req.user.email}!`,\n    userId: req.user.userId\n  });\n});\n\n// Start server\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => {\n  console.log(`Server running on port ${PORT}`);\n});",
              "length": 736
            },
            {
              "language": "bash",
              "code": "curl -X POST http://localhost:3000/api/auth/register \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"email\":\"user@example.com\",\"password\":\"password123\"}'",
              "length": 155
            },
            {
              "language": "bash",
              "code": "curl -X POST http://localhost:3000/api/auth/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"email\":\"user@example.com\",\"password\":\"password123\"}'",
              "length": 152
            },
            {
              "language": "bash",
              "code": "curl -X GET http://localhost:3000/api/profile \\\n  -H \"Authorization: Bearer YOUR_JWT_TOKEN_HERE\"",
              "length": 96
            }
          ],
          "has_code": true,
          "length": 2483
        }
      ],
      "metadata": {
        "source_file": "examples/sample-api-conversation.json",
        "conversation_length": 4,
        "timestamp_range": {
          "start": 1703270400,
          "end": 1703270640,
          "duration": 240
        }
      }
    },
    {
      "id": "5590a0faae3f",
      "name": "sample-code-conversation",
      "path": "examples/sample-code-conversation.json",
      "domain": "web",
      "type": "conversation",
      "session_id": "code_session_001",
      "message_count": 4,
      "chunks": [
        {
          "id": "chunk_0",
          "turn": 1,
          "role": "user",
          "text": "I need help creating a React component for a user profile card with avatar, name, and bio.",
          "timestamp": 1703097600,
          "code_blocks": [],
          "has_code": false,
          "length": 90
        },
        {
          "id": "chunk_1",
          "turn": 2,
          "role": "assistant",
          "text": "I'll help you create a React user profile card component. Here's a clean implementation:\n\n```jsx\nimport React from 'react';\nimport './UserProfile.css';\n\nconst UserProfile = ({ user }) => {\n  const { avatar, name, bio } = user;\n\n  return (\n    <div className=\"user-profile-card\">\n      <img \n        src={avatar} \n        alt={`${name}'s avatar`}\n        className=\"avatar\"\n      />\n      <h2 className=\"name\">{name}</h2>\n      <p className=\"bio\">{bio}</p>\n    </div>\n  );\n};\n\nexport default UserProfile;\n```\n\nAnd here's the accompanying CSS:\n\n```css\n.user-profile-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  max-width: 300px;\n  background: white;\n}\n\n.avatar {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-bottom: 16px;\n}\n\n.name {\n  margin: 0 0 8px 0;\n  font-size: 1.2em;\n  color: #333;\n}\n\n.bio {\n  margin: 0;\n  text-align: center;\n  color: #666;\n  line-height: 1.4;\n}\n```",
          "timestamp": 1703097660,
          "code_blocks": [
            {
              "language": "jsx",
              "code": "import React from 'react';\nimport './UserProfile.css';\n\nconst UserProfile = ({ user }) => {\n  const { avatar, name, bio } = user;\n\n  return (\n    <div className=\"user-profile-card\">\n      <img \n        src={avatar} \n        alt={`${name}'s avatar`}\n        className=\"avatar\"\n      />\n      <h2 className=\"name\">{name}</h2>\n      <p className=\"bio\">{bio}</p>\n    </div>\n  );\n};\n\nexport default UserProfile;",
              "length": 406
            },
            {
              "language": "css",
              "code": ".user-profile-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  max-width: 300px;\n  background: white;\n}\n\n.avatar {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-bottom: 16px;\n}\n\n.name {\n  margin: 0 0 8px 0;\n  font-size: 1.2em;\n  color: #333;\n}\n\n.bio {\n  margin: 0;\n  text-align: center;\n  color: #666;\n  line-height: 1.4;\n}",
              "length": 466
            }
          ],
          "has_code": true,
          "length": 1020
        },
        {
          "id": "chunk_2",
          "turn": 3,
          "role": "user",
          "text": "This looks great! How can I make it responsive for mobile devices?",
          "timestamp": 1703097720,
          "code_blocks": [],
          "has_code": false,
          "length": 66
        },
        {
          "id": "chunk_3",
          "turn": 4,
          "role": "assistant",
          "text": "Great question! Here are some responsive improvements you can add to the CSS:\n\n```css\n.user-profile-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  max-width: 300px;\n  width: 100%;\n  background: white;\n  box-sizing: border-box;\n}\n\n/* Mobile responsive styles */\n@media (max-width: 768px) {\n  .user-profile-card {\n    max-width: 100%;\n    margin: 0 16px;\n    padding: 16px;\n  }\n  \n  .avatar {\n    width: 60px;\n    height: 60px;\n  }\n  \n  .name {\n    font-size: 1.1em;\n  }\n  \n  .bio {\n    font-size: 0.9em;\n  }\n}\n```\n\nKey responsive improvements:\n1. Added `width: 100%` and `box-sizing: border-box`\n2. Mobile media query for screens under 768px\n3. Smaller avatar and text sizes on mobile\n4. Reduced padding and margins for better mobile UX",
          "timestamp": 1703097780,
          "code_blocks": [
            {
              "language": "css",
              "code": ".user-profile-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  max-width: 300px;\n  width: 100%;\n  background: white;\n  box-sizing: border-box;\n}\n\n/* Mobile responsive styles */\n@media (max-width: 768px) {\n  .user-profile-card {\n    max-width: 100%;\n    margin: 0 16px;\n    padding: 16px;\n  }\n  \n  .avatar {\n    width: 60px;\n    height: 60px;\n  }\n  \n  .name {\n    font-size: 1.1em;\n  }\n  \n  .bio {\n    font-size: 0.9em;\n  }\n}",
              "length": 530
            }
          ],
          "has_code": true,
          "length": 843
        }
      ],
      "metadata": {
        "source_file": "examples/sample-code-conversation.json",
        "conversation_length": 4,
        "timestamp_range": {
          "start": 1703097600,
          "end": 1703097780,
          "duration": 180
        }
      }
    }
  ],
  "queries": [
    {
      "id": "188a3dbfa792",
      "text": "I need to set up automated deployment for my Node.js application using GitHub Actions.",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "chunk_id": "chunk_0",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        },
        {
          "example_id": "1a46459973cf",
          "chunk_id": "chunk_1",
          "relevance_score": 0.9,
          "explanation": "Direct response to query in sample-tool-conversation",
          "rank": 2,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "user_query",
        "source_example": "1a46459973cf",
        "source_chunk": "chunk_0",
        "has_followup": true,
        "turn": 1
      }
    },
    {
      "id": "4068f53ea677",
      "text": "What secrets do I need to configure in GitHub?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "chunk_id": "chunk_2",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        },
        {
          "example_id": "1a46459973cf",
          "chunk_id": "chunk_3",
          "relevance_score": 0.9,
          "explanation": "Direct response to query in sample-tool-conversation",
          "rank": 2,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "user_query",
        "source_example": "1a46459973cf",
        "source_chunk": "chunk_2",
        "has_followup": true,
        "turn": 3
      }
    },
    {
      "id": "b18e9d4ba0ea",
      "text": "How do I set up CI/CD with GitHub Actions?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "chunk_id": "chunk_1",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "synthetic_code",
        "source_example": "1a46459973cf",
        "source_chunk": "chunk_1",
        "code_language": "yaml",
        "turn": 2
      }
    },
    {
      "id": "cf1043912ec8",
      "text": "I need to create a REST API for managing user authentication with JWT tokens.",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "chunk_id": "chunk_0",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        },
        {
          "example_id": "56b6ecaa6f36",
          "chunk_id": "chunk_1",
          "relevance_score": 0.9,
          "explanation": "Direct response to query in sample-api-conversation",
          "rank": 2,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "user_query",
        "source_example": "56b6ecaa6f36",
        "source_chunk": "chunk_0",
        "has_followup": true,
        "turn": 1
      }
    },
    {
      "id": "272c0ad66025",
      "text": "How do I create middleware to protect routes that require authentication?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "chunk_id": "chunk_2",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        },
        {
          "example_id": "56b6ecaa6f36",
          "chunk_id": "chunk_3",
          "relevance_score": 0.9,
          "explanation": "Direct response to query in sample-api-conversation",
          "rank": 2,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "user_query",
        "source_example": "56b6ecaa6f36",
        "source_chunk": "chunk_2",
        "has_followup": true,
        "turn": 3
      }
    },
    {
      "id": "f9f6245d955d",
      "text": "How do I work with bash in api development?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "chunk_id": "chunk_1",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "synthetic_code",
        "source_example": "56b6ecaa6f36",
        "source_chunk": "chunk_1",
        "code_language": "bash",
        "turn": 2
      }
    },
    {
      "id": "7deba5c92aac",
      "text": "How do I work with env in api development?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "chunk_id": "chunk_1",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "synthetic_code",
        "source_example": "56b6ecaa6f36",
        "source_chunk": "chunk_1",
        "code_language": "env",
        "turn": 2
      }
    },
    {
      "id": "0e49de54a10f",
      "text": "How do I handle asynchronous operations in JavaScript?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "chunk_id": "chunk_1",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "synthetic_code",
        "source_example": "56b6ecaa6f36",
        "source_chunk": "chunk_1",
        "code_language": "javascript",
        "turn": 2
      }
    },
    {
      "id": "f9b998aae6a2",
      "text": "How do I write modern JavaScript code?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "chunk_id": "chunk_3",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "synthetic_code",
        "source_example": "56b6ecaa6f36",
        "source_chunk": "chunk_3",
        "code_language": "javascript",
        "turn": 4
      }
    },
    {
      "id": "f9b998aae6a2",
      "text": "How do I create REST API endpoints?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "chunk_id": "chunk_3",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "synthetic_code",
        "source_example": "56b6ecaa6f36",
        "source_chunk": "chunk_3",
        "code_language": "javascript",
        "turn": 4
      }
    },
    {
      "id": "7eadf87ffcb7",
      "text": "How do I work with bash in api development?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "chunk_id": "chunk_3",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "synthetic_code",
        "source_example": "56b6ecaa6f36",
        "source_chunk": "chunk_3",
        "code_language": "bash",
        "turn": 4
      }
    },
    {
      "id": "7eadf87ffcb7",
      "text": "How do I work with bash in api development?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "chunk_id": "chunk_3",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "synthetic_code",
        "source_example": "56b6ecaa6f36",
        "source_chunk": "chunk_3",
        "code_language": "bash",
        "turn": 4
      }
    },
    {
      "id": "7eadf87ffcb7",
      "text": "How do I work with bash in api development?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "chunk_id": "chunk_3",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "synthetic_code",
        "source_example": "56b6ecaa6f36",
        "source_chunk": "chunk_3",
        "code_language": "bash",
        "turn": 4
      }
    },
    {
      "id": "18cd3009b05f",
      "text": "I need help creating a React component for a user profile card with avatar, name, and bio.",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "chunk_id": "chunk_0",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        },
        {
          "example_id": "5590a0faae3f",
          "chunk_id": "chunk_1",
          "relevance_score": 0.9,
          "explanation": "Direct response to query in sample-code-conversation",
          "rank": 2,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "user_query",
        "source_example": "5590a0faae3f",
        "source_chunk": "chunk_0",
        "has_followup": true,
        "turn": 1
      }
    },
    {
      "id": "a3dbeca65010",
      "text": "This looks great! How can I make it responsive for mobile devices?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "chunk_id": "chunk_2",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        },
        {
          "example_id": "5590a0faae3f",
          "chunk_id": "chunk_3",
          "relevance_score": 0.9,
          "explanation": "Direct response to query in sample-code-conversation",
          "rank": 2,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "user_query",
        "source_example": "5590a0faae3f",
        "source_chunk": "chunk_2",
        "has_followup": true,
        "turn": 3
      }
    },
    {
      "id": "9e7e8f776514",
      "text": "How do I build React applications?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "chunk_id": "chunk_1",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "synthetic_code",
        "source_example": "5590a0faae3f",
        "source_chunk": "chunk_1",
        "code_language": "jsx",
        "turn": 2
      }
    },
    {
      "id": "db6b96e8f94a",
      "text": "How do I create flexible layouts with CSS?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "chunk_id": "chunk_1",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "synthetic_code",
        "source_example": "5590a0faae3f",
        "source_chunk": "chunk_1",
        "code_language": "css",
        "turn": 2
      }
    },
    {
      "id": "f44bf642a065",
      "text": "How do I make my website responsive?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "chunk_id": "chunk_3",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation conversation",
          "rank": 1,
          "content_type": "conversation"
        }
      ],
      "metadata": {
        "source_type": "synthetic_code",
        "source_example": "5590a0faae3f",
        "source_chunk": "chunk_3",
        "code_language": "css",
        "turn": 4
      }
    },
    {
      "id": "af3182645da2",
      "text": "What is the basic HTML structure?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is the basic HTML structure?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "c449d4df086b",
      "text": "How do I style elements with CSS?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I style elements with CSS?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "6ba454319605",
      "text": "What is the basic HTML structure?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is the basic HTML structure?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "d5048eeae670",
      "text": "How do I create a React component?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I create a React component?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "1f55e1a267b5",
      "text": "How do I create a React component?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I create a React component?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "71f3d237321e",
      "text": "How do I style elements with CSS?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I style elements with CSS?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "2dc5c74618f2",
      "text": "How do I create a React component?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I create a React component?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "6808780d513e",
      "text": "What is the basic HTML structure?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is the basic HTML structure?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "88b79c88cd39",
      "text": "What is the basic HTML structure?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is the basic HTML structure?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "b74837737ea4",
      "text": "How do I create a React component?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I create a React component?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "e4652e0f7124",
      "text": "How do I style elements with CSS?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I style elements with CSS?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "50e47a5d5016",
      "text": "How do I style elements with CSS?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I style elements with CSS?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "f039b5033ca2",
      "text": "How do I style elements with CSS?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I style elements with CSS?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "32a5793559a5",
      "text": "How do I create a React component?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I create a React component?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "27942ef63a5c",
      "text": "What is the basic HTML structure?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is the basic HTML structure?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "a562c562b7bc",
      "text": "What is the basic HTML structure?",
      "domain": "web",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is the basic HTML structure?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "4012f3db4dc9",
      "text": "How do I implement routing in a React application?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement routing in a React application?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "33a68088818e",
      "text": "How do I implement routing in a React application?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement routing in a React application?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "3a3c203db4b1",
      "text": "How do I implement routing in a React application?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement routing in a React application?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "7b1aaa2310e6",
      "text": "How do I optimize web performance?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I optimize web performance?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "fc83bf051658",
      "text": "How do I implement routing in a React application?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement routing in a React application?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "eb7711fc2c13",
      "text": "How do I implement routing in a React application?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement routing in a React application?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "da363dee4181",
      "text": "What's the best way to handle form validation?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to handle form validation?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "02c61353cc71",
      "text": "How do I optimize web performance?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I optimize web performance?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "5f2f12dbaa51",
      "text": "What's the best way to handle form validation?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to handle form validation?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "04baeb5b2129",
      "text": "How do I optimize web performance?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I optimize web performance?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "651476bae2ea",
      "text": "How do I optimize web performance?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I optimize web performance?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "8d1e2966ccc8",
      "text": "How do I implement routing in a React application?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement routing in a React application?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "0a645a95156d",
      "text": "How do I implement routing in a React application?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement routing in a React application?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "3ff0e71e0f77",
      "text": "What's the best way to handle form validation?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to handle form validation?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "074fdeccf919",
      "text": "How do I implement routing in a React application?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement routing in a React application?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "fc6fc7f9a32b",
      "text": "How do I optimize web performance?",
      "domain": "web",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I optimize web performance?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "074262de0701",
      "text": "How do I debug complex state management issues?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I debug complex state management issues?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "9fde15a4f4b5",
      "text": "What's the best architecture for a micro-frontend system?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best architecture for a micro-frontend system?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "69fcb2e5b98b",
      "text": "How do I implement server-side rendering with hydration?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement server-side rendering with hydration?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "6cad0834a19a",
      "text": "How do I implement server-side rendering with hydration?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement server-side rendering with hydration?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "ef12348eedd6",
      "text": "How do I implement server-side rendering with hydration?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement server-side rendering with hydration?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "a9da12c1550a",
      "text": "How do I implement server-side rendering with hydration?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement server-side rendering with hydration?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "7e2d49bdb509",
      "text": "How do I debug complex state management issues?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I debug complex state management issues?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "9cb6a72496e9",
      "text": "What's the best architecture for a micro-frontend system?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best architecture for a micro-frontend system?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "48f80e96dbda",
      "text": "How do I implement server-side rendering with hydration?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement server-side rendering with hydration?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "111e685dd2c5",
      "text": "How do I implement server-side rendering with hydration?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement server-side rendering with hydration?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "8aefcc083f39",
      "text": "What's the best architecture for a micro-frontend system?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best architecture for a micro-frontend system?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "bf0a5fcaf78b",
      "text": "What's the best architecture for a micro-frontend system?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best architecture for a micro-frontend system?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "87c14f9c6a35",
      "text": "How do I debug complex state management issues?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I debug complex state management issues?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "2a074fbdbe0a",
      "text": "How do I debug complex state management issues?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I debug complex state management issues?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "dd433292be7a",
      "text": "What's the best architecture for a micro-frontend system?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best architecture for a micro-frontend system?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "d45fb36c3732",
      "text": "How do I implement server-side rendering with hydration?",
      "domain": "web",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "5590a0faae3f",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-code-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement server-side rendering with hydration?",
        "source_example": "5590a0faae3f"
      }
    },
    {
      "id": "d306e322d5b2",
      "text": "What is API authentication?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is API authentication?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "d4f87b5d4dea",
      "text": "How do I handle HTTP requests?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I handle HTTP requests?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "fdd8f5a8c0aa",
      "text": "How do I handle HTTP requests?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I handle HTTP requests?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "a94256acbc6c",
      "text": "How do I handle HTTP requests?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I handle HTTP requests?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "dc6fa4448d88",
      "text": "What is API authentication?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is API authentication?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "5bbe43caf10d",
      "text": "How do I handle HTTP requests?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I handle HTTP requests?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "4c7bc8406d13",
      "text": "What is API authentication?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is API authentication?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "b6d2a88a7c51",
      "text": "What is API authentication?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is API authentication?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "f406ae3aef99",
      "text": "What is API authentication?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is API authentication?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "df5cd349cba5",
      "text": "How do I handle HTTP requests?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I handle HTTP requests?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "2491f0c99bf6",
      "text": "How do I create a REST endpoint?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I create a REST endpoint?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "e770bea691e2",
      "text": "What is API authentication?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is API authentication?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "475def1499c4",
      "text": "How do I create a REST endpoint?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I create a REST endpoint?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "88830508e218",
      "text": "How do I handle HTTP requests?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I handle HTTP requests?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "ead174ea2d0f",
      "text": "What is API authentication?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is API authentication?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "1bd55c666ae0",
      "text": "What is API authentication?",
      "domain": "api",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is API authentication?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "ea32d8890b04",
      "text": "How do I implement rate limiting?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement rate limiting?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "76c54bd19483",
      "text": "How do I implement rate limiting?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement rate limiting?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "ac5696fea4bd",
      "text": "What's the best way to version APIs?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to version APIs?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "f72f5da6d163",
      "text": "What's the best way to version APIs?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to version APIs?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "1846f015ebad",
      "text": "How do I implement rate limiting?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement rate limiting?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "ea37bc7fd59c",
      "text": "How do I implement rate limiting?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement rate limiting?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "96ed9c19165a",
      "text": "How do I handle async operations?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I handle async operations?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "73f6884f3fde",
      "text": "How do I handle async operations?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I handle async operations?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "74ab318f0460",
      "text": "How do I handle async operations?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I handle async operations?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "21559fb2f199",
      "text": "How do I implement rate limiting?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement rate limiting?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "391416974f7d",
      "text": "How do I handle async operations?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I handle async operations?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "d9c0077ba4ba",
      "text": "How do I handle async operations?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I handle async operations?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "f51cf0b27d05",
      "text": "What's the best way to version APIs?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to version APIs?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "f19d3a005daf",
      "text": "What's the best way to version APIs?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to version APIs?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "87b89d70f048",
      "text": "How do I implement rate limiting?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement rate limiting?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "fc5780ec468f",
      "text": "How do I handle async operations?",
      "domain": "api",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I handle async operations?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "288b4647c91d",
      "text": "How do I design a GraphQL schema for complex relationships?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I design a GraphQL schema for complex relationships?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "39c5b2a8cd1b",
      "text": "How do I implement distributed tracing?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement distributed tracing?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "3580490fe462",
      "text": "What's the best approach for API gateway architecture?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best approach for API gateway architecture?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "0450042d36c6",
      "text": "How do I implement distributed tracing?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement distributed tracing?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "749b87b07ab0",
      "text": "How do I design a GraphQL schema for complex relationships?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I design a GraphQL schema for complex relationships?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "4758843dfd84",
      "text": "How do I implement distributed tracing?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement distributed tracing?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "82f30ce7a5bb",
      "text": "What's the best approach for API gateway architecture?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best approach for API gateway architecture?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "ed1f6609b578",
      "text": "What's the best approach for API gateway architecture?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best approach for API gateway architecture?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "6b6a2a1cb777",
      "text": "How do I design a GraphQL schema for complex relationships?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I design a GraphQL schema for complex relationships?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "fc43233a3e7d",
      "text": "What's the best approach for API gateway architecture?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best approach for API gateway architecture?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "ef173a4d0b0c",
      "text": "How do I design a GraphQL schema for complex relationships?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I design a GraphQL schema for complex relationships?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "e6bdc080d32d",
      "text": "How do I implement distributed tracing?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement distributed tracing?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "4dd8104cd69a",
      "text": "How do I design a GraphQL schema for complex relationships?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I design a GraphQL schema for complex relationships?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "723e01a1106a",
      "text": "How do I design a GraphQL schema for complex relationships?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I design a GraphQL schema for complex relationships?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "10abf45cdb49",
      "text": "How do I design a GraphQL schema for complex relationships?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I design a GraphQL schema for complex relationships?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "53663f54b432",
      "text": "How do I implement distributed tracing?",
      "domain": "api",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "56b6ecaa6f36",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-api-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement distributed tracing?",
        "source_example": "56b6ecaa6f36"
      }
    },
    {
      "id": "43ace7678c46",
      "text": "How do I parse command line arguments?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I parse command line arguments?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "69777f35e826",
      "text": "How do I handle user input?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I handle user input?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "60467538542f",
      "text": "How do I parse command line arguments?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I parse command line arguments?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "45d43ce3d294",
      "text": "What is the basic CLI structure?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is the basic CLI structure?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "9d2f22ed8799",
      "text": "How do I handle user input?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I handle user input?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "6267b28d50f6",
      "text": "What is the basic CLI structure?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is the basic CLI structure?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "10e422b1b990",
      "text": "How do I parse command line arguments?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I parse command line arguments?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "42c861aa5e22",
      "text": "What is the basic CLI structure?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is the basic CLI structure?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "71d597a08787",
      "text": "What is the basic CLI structure?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "What is the basic CLI structure?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "5147fe691854",
      "text": "How do I handle user input?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I handle user input?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "e876b43a7729",
      "text": "How do I parse command line arguments?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I parse command line arguments?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "17753ab000b4",
      "text": "How do I parse command line arguments?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I parse command line arguments?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "11a4b2a4e01a",
      "text": "How do I handle user input?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I handle user input?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "5dc9e98bed50",
      "text": "How do I handle user input?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I handle user input?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "67dfd3b02123",
      "text": "How do I handle user input?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I handle user input?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "80639637b423",
      "text": "How do I parse command line arguments?",
      "domain": "cli",
      "difficulty": "easy",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        }
      ],
      "metadata": {
        "template_used": "How do I parse command line arguments?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "ad5ab0db8002",
      "text": "How do I implement command autocomplete?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement command autocomplete?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "dca8e3bda9c1",
      "text": "How do I implement command autocomplete?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement command autocomplete?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "460aba775bc2",
      "text": "How do I create interactive prompts?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I create interactive prompts?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "ed2511c29f29",
      "text": "How do I implement command autocomplete?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement command autocomplete?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "99b9bc1ccef5",
      "text": "How do I create interactive prompts?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I create interactive prompts?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "f96e411b23d8",
      "text": "What's the best way to handle configuration files?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to handle configuration files?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "efe45b144bc5",
      "text": "How do I create interactive prompts?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I create interactive prompts?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "8464efb1c5c9",
      "text": "What's the best way to handle configuration files?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to handle configuration files?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "3a965f49fd61",
      "text": "How do I implement command autocomplete?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement command autocomplete?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "30083eea4b83",
      "text": "How do I implement command autocomplete?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement command autocomplete?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "d304f54f0596",
      "text": "What's the best way to handle configuration files?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to handle configuration files?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "9aefb486005d",
      "text": "How do I implement command autocomplete?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I implement command autocomplete?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "760acd91b676",
      "text": "What's the best way to handle configuration files?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to handle configuration files?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "813445014728",
      "text": "How do I create interactive prompts?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "How do I create interactive prompts?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "94b8a7ef66ff",
      "text": "What's the best way to handle configuration files?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to handle configuration files?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "1561876b4f6e",
      "text": "What's the best way to handle configuration files?",
      "domain": "cli",
      "difficulty": "medium",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        }
      ],
      "metadata": {
        "template_used": "What's the best way to handle configuration files?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "aab975ac2f6d",
      "text": "How do I implement a plugin system for CLI tools?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement a plugin system for CLI tools?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "c7077ddd29f5",
      "text": "How do I optimize CLI startup performance?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I optimize CLI startup performance?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "96e4e511737d",
      "text": "How do I implement a plugin system for CLI tools?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement a plugin system for CLI tools?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "ca6c8b606f5a",
      "text": "How do I implement a plugin system for CLI tools?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement a plugin system for CLI tools?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "b237106b7a01",
      "text": "How do I implement a plugin system for CLI tools?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement a plugin system for CLI tools?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "4cf9a9f72998",
      "text": "How do I implement a plugin system for CLI tools?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement a plugin system for CLI tools?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "eb25f287396d",
      "text": "What's the best approach for cross-platform compatibility?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best approach for cross-platform compatibility?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "7a3da948de93",
      "text": "How do I optimize CLI startup performance?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I optimize CLI startup performance?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "dfe5c6ec46af",
      "text": "What's the best approach for cross-platform compatibility?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best approach for cross-platform compatibility?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "e89eaca3fdb4",
      "text": "What's the best approach for cross-platform compatibility?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best approach for cross-platform compatibility?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "796c2fa8235a",
      "text": "How do I implement a plugin system for CLI tools?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement a plugin system for CLI tools?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "c74d223379e3",
      "text": "How do I implement a plugin system for CLI tools?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement a plugin system for CLI tools?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "3840b918ab48",
      "text": "How do I implement a plugin system for CLI tools?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement a plugin system for CLI tools?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "777ff15103c2",
      "text": "How do I optimize CLI startup performance?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I optimize CLI startup performance?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "142cc78ed892",
      "text": "How do I implement a plugin system for CLI tools?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "How do I implement a plugin system for CLI tools?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "id": "c5aef7658277",
      "text": "What's the best approach for cross-platform compatibility?",
      "domain": "cli",
      "difficulty": "hard",
      "expected_results": [
        {
          "example_id": "1a46459973cf",
          "relevance_score": 1.0,
          "explanation": "Direct match from sample-tool-conversation example",
          "rank": 1
        },
        {
          "example_id": "related_0",
          "relevance_score": 1.0,
          "explanation": "Related concept or pattern",
          "rank": 2
        },
        {
          "example_id": "related_1",
          "relevance_score": 0.8,
          "explanation": "Related concept or pattern",
          "rank": 3
        },
        {
          "example_id": "related_2",
          "relevance_score": 0.6,
          "explanation": "Related concept or pattern",
          "rank": 4
        },
        {
          "example_id": "related_3",
          "relevance_score": 0.3999999999999999,
          "explanation": "Related concept or pattern",
          "rank": 5
        },
        {
          "example_id": "related_4",
          "relevance_score": 0.3,
          "explanation": "Related concept or pattern",
          "rank": 6
        }
      ],
      "metadata": {
        "template_used": "What's the best approach for cross-platform compatibility?",
        "source_example": "1a46459973cf"
      }
    },
    {
      "text": "",
      "domain": "adversarial",
      "difficulty": "edge_case",
      "expected_results": [],
      "id": "957d3dd6ea7e"
    },
    {
      "text": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
      "domain": "adversarial",
      "difficulty": "edge_case",
      "expected_results": [],
      "id": "3c55a4c66bcc"
    },
    {
      "text": "\ud83d\ude80 How do I implement \ud83c\udfaf performance optimization with \ud83d\udcbb?",
      "domain": "adversarial",
      "difficulty": "edge_case",
      "expected_results": [],
      "id": "21853d9a380b"
    }
  ],
  "evaluation_config": {
    "metrics": [
      "ndcg_at_10",
      "recall_at_10",
      "mrr_at_10"
    ],
    "k_values": [
      5,
      10,
      20
    ],
    "bootstrap_samples": 10000,
    "confidence_level": 0.95
  }
}